/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Laboratorio6;
import java.awt.Dimension;
import javax.swing.*;
public class Binario extends javax.swing.JFrame {
    private Nodo raiz;

    /**
     * Creates new form Binario
     */
    public Binario() {
        initComponents();
        jScrollPane1.setPreferredSize(new Dimension(600, 350));
        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));
        mostrarR.setEditable(false);
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton9 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        mostrarR = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("ÁRBOL BINARIO");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(180, 160, 130));

        jButton9.setBackground(new java.awt.Color(255, 0, 51));
        jButton9.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jButton9.setText("Regresar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jButton1.setText("Crear árbol");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        mostrarR.setColumns(20);
        mostrarR.setRows(5);
        jScrollPane2.setViewportView(mostrarR);

        jButton2.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jButton2.setText("Mostrar recorridos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(345, 345, 345)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jButton9)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2)
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addGap(100, 100, 100)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(100, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton9)
                            .addComponent(jButton2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        Lab_6 or = new Lab_6();
        or.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        crearArbol();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        mostrarRecorridos();
    }//GEN-LAST:event_jButton2ActionPerformed

    
    private void crearArbol() {
        
    UIManager.put("OptionPane.yesButtonText", "SI");
    UIManager.put("OptionPane.noButtonText", "NO");

    String input = JOptionPane.showInputDialog(null, "Ingrese la raíz del árbol (letras A-Z en mayúsculas):");

    if (input != null && input.matches("[A-Z]+")) {
        raiz = new Nodo(input, null, null); 
        JOptionPane.showMessageDialog(null, "Raíz creada con éxito: " + input);

        administrarHijos(raiz);
    } else {
        JOptionPane.showMessageDialog(null, "Entrada inválida. Por favor, ingrese solo letras A-Z.");
    }
}
    
    private void administrarHijos(Nodo nodoActual) {
    while (true) {
        int opcionIzquierda = JOptionPane.showConfirmDialog(null,
                "Nodo actual: " + nodoActual.getDato() + "\n¿Desea agregar un hijo por la izquierda?",
                "Agregar Hijo Izquierdo", JOptionPane.YES_NO_OPTION);

        if (opcionIzquierda == JOptionPane.YES_OPTION) {
            if (nodoActual.getIzq() == null) {
                String valorIzq = JOptionPane.showInputDialog(null, "Ingrese el valor del nodo izquierdo (A-Z):");
                if (valorIzq != null && valorIzq.matches("[A-Z]+")) {
                    nodoActual.setIzq(new Nodo(valorIzq, null, null));
                    JOptionPane.showMessageDialog(null, "Nodo izquierdo agregado con éxito: " + valorIzq);
                    
                    arbolPanel panelArbol = new arbolPanel(raiz);
                    jScrollPane1.setViewportView(panelArbol); 
                    jScrollPane1.revalidate();
                    jScrollPane1.repaint();
                    administrarHijos(nodoActual.getIzq()); 
                } else {
                    JOptionPane.showMessageDialog(null, "Entrada inválida. El valor debe ser solo letras A-Z.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "El nodo izquierdo ya está ocupado.");
            }
        }

        int opcionDerecha = JOptionPane.showConfirmDialog(null,
                "Nodo actual: " + nodoActual.getDato() + "\n¿Desea agregar un hijo por la derecha?",
                "Agregar Hijo Derecho", JOptionPane.YES_NO_OPTION);

        if (opcionDerecha == JOptionPane.YES_OPTION) {
            if (nodoActual.getDer() == null) {
                String valorDer = JOptionPane.showInputDialog(null, "Ingrese el valor del nodo derecho (A-Z):");
                if (valorDer != null && valorDer.matches("[A-Z]+")) {
                    nodoActual.setDer(new Nodo(valorDer, null, null));
                    JOptionPane.showMessageDialog(null, "Nodo derecho agregado con éxito: " + valorDer);
                    arbolPanel panelArbol = new arbolPanel(raiz);
                    jScrollPane1.setViewportView(panelArbol); 
                    jScrollPane1.revalidate();
                    jScrollPane1.repaint();
                    administrarHijos(nodoActual.getDer());
                } else {
                    JOptionPane.showMessageDialog(null, "Entrada inválida. El valor debe ser solo letras A-Z.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "El nodo derecho ya está ocupado.");
            }
        }

        break;
    }
}


   
private void preorden(Nodo nodoActual, StringBuilder resultado) {
    if (nodoActual != null) {
        resultado.append(nodoActual.getDato()).append(" ");
        preorden(nodoActual.getIzq(), resultado);
        preorden(nodoActual.getDer(), resultado);
    }
}

private void inorden(Nodo nodoActual, StringBuilder resultado) {
    if (nodoActual != null) {
        inorden(nodoActual.getIzq(), resultado);
        resultado.append(nodoActual.getDato()).append(" ");
        inorden(nodoActual.getDer(), resultado);
    }
}

private void posorden(Nodo nodoActual, StringBuilder resultado) {
    if (nodoActual != null) {
        posorden(nodoActual.getIzq(), resultado);
        posorden(nodoActual.getDer(), resultado);
        resultado.append(nodoActual.getDato()).append(" ");
    }
}

private void mostrarRecorridos() {
    if (raiz != null) {
        StringBuilder preordenResultado = new StringBuilder();
        StringBuilder inordenResultado = new StringBuilder();
        StringBuilder posordenResultado = new StringBuilder();

        preorden(raiz, preordenResultado);
        inorden(raiz, inordenResultado);
        posorden(raiz, posordenResultado);

        
        String resultados = "\tRecorridos:\nPreorden: " + preordenResultado.toString().trim() + "\n" +
                            "Inorden: " + inordenResultado.toString().trim() + "\n" +
                            "Posorden: " + posordenResultado.toString().trim();

        mostrarR.setText(resultados);
        
    } else {
        JOptionPane.showMessageDialog(null, "El árbol está vacío. Cree una raíz primero.");
    }
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea mostrarR;
    // End of variables declaration//GEN-END:variables
}
