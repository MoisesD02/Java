/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package laboratorio4;

import javax.swing.JOptionPane;

public class Notacion extends javax.swing.JFrame {

    /**
     * Creates new form Notacion
     */
    String resultado;
    String cadena = "";
    
    public Notacion() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ingresar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnIngresar = new javax.swing.JButton();
        prefija = new javax.swing.JButton();
        Postfija = new javax.swing.JButton();
        Output = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("NOTACIONES");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 51, 51));

        ingresar.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel1.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Ingrese la notacion Infija");

        btnIngresar.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        btnIngresar.setText("Ingresar");
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        prefija.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        prefija.setText("Convertir a Prefija");
        prefija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prefijaActionPerformed(evt);
            }
        });

        Postfija.setFont(new java.awt.Font("Serif", 0, 18)); // NOI18N
        Postfija.setText("Convertir a Postfija");
        Postfija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PostfijaActionPerformed(evt);
            }
        });

        Output.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jButton9.setBackground(new java.awt.Color(255, 0, 51));
        jButton9.setFont(new java.awt.Font("Serif", 0, 14)); // NOI18N
        jButton9.setText("Regresar");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(Output, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(292, 292, 292))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton9)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(163, 163, 163)
                .addComponent(prefija)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Postfija)
                .addGap(131, 131, 131))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(104, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(ingresar, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnIngresar)
                .addGap(189, 189, 189))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ingresar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnIngresar))
                .addGap(90, 90, 90)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Postfija)
                    .addComponent(prefija))
                .addGap(59, 59, 59)
                .addComponent(Output, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                .addComponent(jButton9)
                .addContainerGap())
        );

        ingresar.getAccessibleContext().setAccessibleName("ing");
        btnIngresar.getAccessibleContext().setAccessibleName("");
        prefija.getAccessibleContext().setAccessibleName("");
        Postfija.getAccessibleContext().setAccessibleName("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        
       cadena = ingresar.getText().trim();

        
        if (!cadena.matches("[A-Z*/()\\-\\+]+")) { 
                JOptionPane.showMessageDialog(this, 
                "Solo se permiten letras mayÃºsculas y los caracteres -+*/().", 
                "Error de entrada", 
                JOptionPane.ERROR_MESSAGE);
            cadena = ""; 
            ingresar.setText(""); 
        } else {
        
            cadena = cadena.replace(" ", "");
            //ingresar.setText("");
            btnIngresar.setEnabled(false);
        }
        
        
    }//GEN-LAST:event_btnIngresarActionPerformed

    public static int precedencia(char operador) {
        
        switch(operador) {
            
            case '+', '-' -> {
                return 1;
            }
            case '*', '/' -> {
                return 2;
            }  
        }
        return -1;  
    }
    
    
    public static String Postfijo(String expresion)
    {
        String resultado = "";
        
        char[] pila = new char[expresion.length()];  
        int tope = -1;  

        for (int i = 0; i < expresion.length(); i++) {
            char c = expresion.charAt(i);

            if (Character.isLetterOrDigit(c)) {
                resultado += c;
            }
            
            else if (c == '(') {
                pila[++tope] = c;  
            }
            
            else if (c == ')') {
                while (tope != -1 && pila[tope] != '(') {
                    resultado += pila[tope--];  
                }
                tope--;  
            }
            
            else {
                while (tope != -1 && precedencia(c) <= precedencia(pila[tope])) {
                    resultado += pila[tope--];  
                }
                pila[++tope] = c;  
            }
        }

        while (tope != -1) {
            resultado += pila[tope--];
        }
        
        return resultado;
    }
    
    public static String Prefijo(String expresion) {
    String resultado = "";
    
    StringBuilder expresionInvertida = new StringBuilder(expresion).reverse();
    char[] pila = new char[expresionInvertida.length()];
    int tope = -1;

    for (int i = 0; i < expresionInvertida.length(); i++) {
        char c = expresionInvertida.charAt(i);

        if (c == '(') {
            c = ')';
        } else if (c == ')') {
            c = '(';
        }

        if (Character.isLetterOrDigit(c)) {
            resultado += c;
        }
        
        else if (c == '(') {
            pila[++tope] = c;
        }
        
        else if (c == ')') {
            while (tope != -1 && pila[tope] != '(') {
                resultado += pila[tope--];
            }
            tope--; 
        }
        
        else {
            while (tope != -1 && precedencia(c) < precedencia(pila[tope])) {
                resultado += pila[tope--];
            }
            pila[++tope] = c;
        }
    }

    while (tope != -1) {
        resultado += pila[tope--];
    }
    
    return new StringBuilder(resultado).reverse().toString();
}

    
    private void prefijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prefijaActionPerformed
        // TODO add your handling code here:
        resultado = Prefijo(cadena);
        Output.setText(resultado);
        Output.setEditable(false);
        
    }//GEN-LAST:event_prefijaActionPerformed

    private void PostfijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PostfijaActionPerformed
        // TODO add your handling code here:
        resultado = Postfijo(cadena);
        Output.setText(resultado);
        Output.setEditable(false);
        
    }//GEN-LAST:event_PostfijaActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        PilasYColas or = new PilasYColas();
        or.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton9ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Output;
    private javax.swing.JButton Postfija;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JTextField ingresar;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton prefija;
    // End of variables declaration//GEN-END:variables
}
